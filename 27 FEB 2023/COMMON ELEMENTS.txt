class Solution
{
    public:    
       vector <int> commonElements (int A[], int B[], int C[], int n1, int n2, int n3)
        {
            //code here.
            
            vector<int> v;
            
            
            int i=0,j=0,k=0;
            
            while(i<n1 && j<n2 && k<n3)
            {
                if(A[i]==B[j] && B[j]==C[k])
                {
                    v.push_back(A[i]);
                    
                    i++;
                    j++;
                    k++;
                    
                }
                else if( A[i] < B[j] )
                        i++;
                
                else if( B[j] < C[k] )
                        j++;
                else
                    k++;
                
                
                int xx = A[i-1];
                int jj = B[j-1];
                int kk = C[k-1];
                
                while(A[i] == xx)
                    i++;
                while(B[j] == jj)
                    j++;
                while(C[k] == kk)
                    k++;
                
            }
            
            if(v.size()==0)
                return {-1};
            
            return v;
            
        }

};







class Solution
{
    public:    
       vector <int> commonElements (int A[], int B[], int C[], int n1, int n2, int n3)
        {
            //code here.
            vector<int> v;
            
            unordered_map<int ,int> mpa,mpb,mpc;
            
            for(int i=0;i<n1;i++) mpa[A[i]]++;
            for(int i=0;i<n2;i++) mpb[B[i]]++;
            for(int i=0;i<n3;i++) mpc[C[i]]++;
         
            for(int i=0;i<n1;i++)
            {
                if(mpa[A[i]] && mpb[A[i]] && mpc[A[i]])
                {
                    v.push_back(A[i]);
                    mpa[A[i]]=0;
                }
            }
            
            if(!v.empty())
                return v;
            else
                return {-1};
        }

};










